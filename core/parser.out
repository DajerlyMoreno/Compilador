Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> ID EQUALS expression SEMICOLON
Rule 4     statement -> expression SEMICOLON
Rule 5     expression -> expression PLUS expression
Rule 6     expression -> expression MINUS expression
Rule 7     expression -> expression TIMES expression
Rule 8     expression -> expression DIVIDE expression
Rule 9     expression -> LPAREN expression RPAREN
Rule 10    expression -> NUMBER
Rule 11    expression -> ID

Terminals, with rules where they appear

DIVIDE               : 8
EQUALS               : 3
ID                   : 3 11
LPAREN               : 9
MINUS                : 6
NUMBER               : 10
PLUS                 : 5
RPAREN               : 9
SEMICOLON            : 3 4
TIMES                : 7
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 5 5 6 6 7 7 8 8 9
program              : 1 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . expression SEMICOLON
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    ID              shift and go to state 3
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6

    program                        shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . expression SEMICOLON
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    ID              shift and go to state 3
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6

    statement                      shift and go to state 7
    expression                     shift and go to state 4

state 2

    (2) program -> statement .

    ID              reduce using rule 2 (program -> statement .)
    LPAREN          reduce using rule 2 (program -> statement .)
    NUMBER          reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> ID . EQUALS expression SEMICOLON
    (11) expression -> ID .

    EQUALS          shift and go to state 8
    SEMICOLON       reduce using rule 11 (expression -> ID .)
    PLUS            reduce using rule 11 (expression -> ID .)
    MINUS           reduce using rule 11 (expression -> ID .)
    TIMES           reduce using rule 11 (expression -> ID .)
    DIVIDE          reduce using rule 11 (expression -> ID .)


state 4

    (4) statement -> expression . SEMICOLON
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 5

    (9) expression -> LPAREN . expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    ID              shift and go to state 15

    expression                     shift and go to state 14

state 6

    (10) expression -> NUMBER .

    SEMICOLON       reduce using rule 10 (expression -> NUMBER .)
    PLUS            reduce using rule 10 (expression -> NUMBER .)
    MINUS           reduce using rule 10 (expression -> NUMBER .)
    TIMES           reduce using rule 10 (expression -> NUMBER .)
    DIVIDE          reduce using rule 10 (expression -> NUMBER .)
    RPAREN          reduce using rule 10 (expression -> NUMBER .)


state 7

    (1) program -> program statement .

    ID              reduce using rule 1 (program -> program statement .)
    LPAREN          reduce using rule 1 (program -> program statement .)
    NUMBER          reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 8

    (3) statement -> ID EQUALS . expression SEMICOLON
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    ID              shift and go to state 15

    expression                     shift and go to state 16

state 9

    (4) statement -> expression SEMICOLON .

    ID              reduce using rule 4 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> expression SEMICOLON .)


state 10

    (5) expression -> expression PLUS . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    ID              shift and go to state 15

    expression                     shift and go to state 17

state 11

    (6) expression -> expression MINUS . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    ID              shift and go to state 15

    expression                     shift and go to state 18

state 12

    (7) expression -> expression TIMES . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    ID              shift and go to state 15

    expression                     shift and go to state 19

state 13

    (8) expression -> expression DIVIDE . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . NUMBER
    (11) expression -> . ID

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    ID              shift and go to state 15

    expression                     shift and go to state 20

state 14

    (9) expression -> LPAREN expression . RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 21
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 15

    (11) expression -> ID .

    RPAREN          reduce using rule 11 (expression -> ID .)
    PLUS            reduce using rule 11 (expression -> ID .)
    MINUS           reduce using rule 11 (expression -> ID .)
    TIMES           reduce using rule 11 (expression -> ID .)
    DIVIDE          reduce using rule 11 (expression -> ID .)
    SEMICOLON       reduce using rule 11 (expression -> ID .)


state 16

    (3) statement -> ID EQUALS expression . SEMICOLON
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 22
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 17

    (5) expression -> expression PLUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 5 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! PLUS            [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression PLUS expression .) ]


state 18

    (6) expression -> expression MINUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 6 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! PLUS            [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression MINUS expression .) ]


state 19

    (7) expression -> expression TIMES expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 7 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 7 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! PLUS            [ reduce using rule 7 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression TIMES expression .) ]


state 20

    (8) expression -> expression DIVIDE expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 8 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 8 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! PLUS            [ reduce using rule 8 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression DIVIDE expression .) ]


state 21

    (9) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (expression -> LPAREN expression RPAREN .)


state 22

    (3) statement -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 17 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 17 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 18 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 18 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 19 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 20 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 20 resolved as shift
