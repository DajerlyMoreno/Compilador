
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CADENA COMMA DISP DIVIDE DOSPUNTOS DOUBLE_EQUALS DQUOTE END EQUALS FALSE FOR GREATER GREATER_EQUALS ID IF LESS LESS_EQUALS LPAREN MINUS NOT NULL NUMBER OR PLUS RPAREN SEMICOLON SQUOTE TIMES TRUE WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementstatement : IF expression statement ENDstatement : FOR ID EQUALS expression DOSPUNTOS expression statement_list ENDstatement : WHILE expression statement_list ENDstatement : DISP LPAREN expression RPAREN SEMICOLON\n                 | DISP LPAREN expression RPARENstatement : ID EQUALS expression SEMICOLON\n                 | ID EQUALS expressionstatement : expression SEMICOLON \n                 | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression LESS_EQUALS expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression DOSPUNTOS expressionexpression : CADENAexpression : NOT expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'IF':([0,2,3,5,7,11,13,14,15,16,17,32,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,56,57,58,60,61,62,63,],[4,4,-3,-12,-29,-25,-28,-2,4,-29,-11,4,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,4,-27,-4,-9,-6,-8,-7,4,4,-5,]),'FOR':([0,2,3,5,7,11,13,14,15,16,17,32,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,56,57,58,60,61,62,63,],[6,6,-3,-12,-29,-25,-28,-2,6,-29,-11,6,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,6,-27,-4,-9,-6,-8,-7,6,6,-5,]),'WHILE':([0,2,3,5,7,11,13,14,15,16,17,32,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,56,57,58,60,61,62,63,],[8,8,-3,-12,-29,-25,-28,-2,8,-29,-11,8,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,8,-27,-4,-9,-6,-8,-7,8,8,-5,]),'DISP':([0,2,3,5,7,11,13,14,15,16,17,32,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,56,57,58,60,61,62,63,],[9,9,-3,-12,-29,-25,-28,-2,9,-29,-11,9,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,9,-27,-4,-9,-6,-8,-7,9,9,-5,]),'ID':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,],[7,7,-3,16,-12,30,-29,16,16,-25,16,-28,-2,7,-29,-11,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,16,-10,7,-27,-4,-9,-6,-8,16,-7,7,7,-5,]),'CADENA':([0,2,3,4,5,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,],[11,11,-3,11,-12,-29,11,11,-25,11,-28,-2,11,-29,-11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,11,-10,11,-27,-4,-9,-6,-8,11,-7,11,11,-5,]),'NOT':([0,2,3,4,5,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,],[12,12,-3,12,-12,-29,12,12,-25,12,-28,-2,12,-29,-11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,12,-10,12,-27,-4,-9,-6,-8,12,-7,12,12,-5,]),'LPAREN':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,],[10,10,-3,10,-12,-29,10,33,10,-25,10,-28,-2,10,-29,-11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,10,-10,10,-27,-4,-9,-6,-8,10,-7,10,10,-5,]),'NUMBER':([0,2,3,4,5,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,],[13,13,-3,13,-12,-29,13,13,-25,13,-28,-2,13,-29,-11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,13,-10,13,-27,-4,-9,-6,-8,13,-7,13,13,-5,]),'$end':([1,2,3,5,7,11,13,14,16,17,35,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,56,57,58,60,63,],[0,-1,-3,-12,-29,-25,-28,-2,-29,-11,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-27,-4,-9,-6,-8,-7,-5,]),'END':([3,5,7,11,13,14,16,17,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,56,57,58,60,62,63,],[-3,-12,-29,-25,-28,-2,-29,-11,-26,54,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,57,-27,-4,-9,-6,-8,-7,63,-5,]),'SEMICOLON':([5,7,11,13,16,35,37,38,39,40,41,42,43,44,45,46,47,48,50,53,58,],[17,-29,-25,-28,-29,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,56,-27,60,]),'PLUS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[18,-29,-25,-28,18,-29,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-27,18,18,]),'MINUS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[19,-29,-25,-28,19,-29,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-27,19,19,]),'TIMES':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[20,-29,-25,-28,20,-29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-27,20,20,]),'DIVIDE':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[21,-29,-25,-28,21,-29,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-27,21,21,]),'GREATER':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[22,-29,-25,-28,22,-29,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-27,22,22,]),'LESS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[23,-29,-25,-28,23,-29,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-27,23,23,]),'DOUBLE_EQUALS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[24,-29,-25,-28,24,-29,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-27,24,24,]),'GREATER_EQUALS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[25,-29,-25,-28,25,-29,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-27,25,25,]),'LESS_EQUALS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[26,-29,-25,-28,26,-29,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-27,26,26,]),'AND':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[27,-29,-25,-28,27,-29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-27,27,27,]),'OR':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[28,-29,-25,-28,28,-29,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-27,28,28,]),'DOSPUNTOS':([5,7,11,13,15,16,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,55,61,],[29,-29,-25,-28,29,-29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-27,59,29,]),'EQUALS':([7,30,],[31,49,]),'RPAREN':([11,13,16,34,35,37,38,39,40,41,42,43,44,45,46,47,48,52,53,],[-25,-28,-29,53,-26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,58,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,32,61,],[2,51,62,]),'statement':([0,2,15,32,51,61,62,],[3,14,36,3,14,3,14,]),'expression':([0,2,4,8,10,12,15,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,49,51,59,61,62,],[5,5,15,32,34,35,5,37,38,39,40,41,42,43,44,45,46,47,48,50,5,52,55,5,61,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','octave_parser.py',26),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','octave_parser.py',31),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','octave_parser.py',35),
  ('statement -> IF expression statement END','statement',4,'p_statement_if','octave_parser.py',39),
  ('statement -> FOR ID EQUALS expression DOSPUNTOS expression statement_list END','statement',8,'p_statement_for','octave_parser.py',44),
  ('statement -> WHILE expression statement_list END','statement',4,'p_statement_while','octave_parser.py',49),
  ('statement -> DISP LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_disp','octave_parser.py',54),
  ('statement -> DISP LPAREN expression RPAREN','statement',4,'p_statement_disp','octave_parser.py',55),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assign','octave_parser.py',61),
  ('statement -> ID EQUALS expression','statement',3,'p_statement_assign','octave_parser.py',62),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','octave_parser.py',67),
  ('statement -> expression','statement',1,'p_statement_expr','octave_parser.py',68),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','octave_parser.py',74),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','octave_parser.py',75),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','octave_parser.py',76),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','octave_parser.py',77),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','octave_parser.py',78),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','octave_parser.py',79),
  ('expression -> expression DOUBLE_EQUALS expression','expression',3,'p_expression_binop','octave_parser.py',80),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binop','octave_parser.py',81),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binop','octave_parser.py',82),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','octave_parser.py',83),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','octave_parser.py',84),
  ('expression -> expression DOSPUNTOS expression','expression',3,'p_expression_binop','octave_parser.py',85),
  ('expression -> CADENA','expression',1,'p_expression_cadena','octave_parser.py',90),
  ('expression -> NOT expression','expression',2,'p_expression_not','octave_parser.py',95),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','octave_parser.py',100),
  ('expression -> NUMBER','expression',1,'p_expression_number','octave_parser.py',105),
  ('expression -> ID','expression',1,'p_expression_id','octave_parser.py',110),
]
